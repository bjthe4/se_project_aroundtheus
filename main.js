!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=document.querySelector(".js-add-modal"),r=document.querySelector(".js-edit-modal"),s=document.querySelector(".js-preview-modal"),i=document.querySelector("#profile-edit-button"),o=document.querySelector("#profile-edit-modal"),n=(document.querySelector(".modal__preview-image"),document.querySelector("#preview-caption"),document.querySelector("#profile-add-modal")),a=(r.querySelector("#profile-close-modal"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),l=document.querySelector("#profile-title-description"),d=(document.querySelector(".profile__image"),o.querySelector(".modal__form"),document.querySelector("#profile-add-button")),c=(t.querySelector("#add-close-modal"),document.querySelector("#modal__form-add"),document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector("#preview-modal"),s.querySelector("#preview-close-modal"),r.querySelector(".modal__form")),u=t.querySelector(".modal__form"),h=document.querySelector("#edit-avatar-modal-form");class _{constructor(e,t,r,s,i){let{name:o,link:n,_id:a,isLiked:l}=e;this._name=o,this._link=n,this._id=a,this._cardSelector=t,this._handleImageClick=r,this._handleDeleteCard=s,this._handleLikeButton=i,this.isLiked=l}getCardId(){return this._id}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleDeleteCard(this)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link}))),this._likeButton.addEventListener("click",(e=>{e.preventDefault(),e.target===this._likeButton&&this._handleLikeButton(this)}))}updateIsLiked(e){this.isLiked=e,this.renderLikes()}renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}remove(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._setEventListeners(),this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__image").alt=this._link,this._cardElement.querySelector(".card__title").textContent=this._name,this.renderLikes(),this._cardElement}}var m=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class p{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class v{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),console.log(t),this._closebutton=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){console.log(this._popupElement),this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closebutton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}}class E extends v{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=r,this._submitButton=this._popupElement.querySelector(".modal__button")}renderLoading(e){this._submitButton.textContent=e?"Saving...":"Save"}_getInputValues(){this._inputElements=this._popupForm.querySelectorAll(".modal__input");const e={};return this._inputElements.forEach((t=>{e[t.name]=t.value})),e}reset(){this._popupForm.reset()}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const S=new class{constructor(e,t){this._headers=e,this._baseUrl=t}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users//me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}updateProfileInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}createNewCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers,body:JSON.stringify({isLiked:!0})}).then(this._checkResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers,body:JSON.stringify({isLiked:!1})}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({authorization:"91a10936-bcf5-444e-a37c-1d53d5865859","Content-Type":"application/json"},"https://around-api.en.tripleten-services.com/v1");let f;S.getUserInfo().then((e=>{console.log(e),g.setUserInfo(e.name,e.about),g.setAvatar(e.avatar)})).catch((e=>{console.error(e)})),S.getInitialCards().then((e=>{f=new p({items:e,renderer:e=>{const t=F(e);f.addItem(t)}},".cards__list"),f.renderItems(),console.log(e)})).catch((e=>{console.error(e)}));const y=new class extends v{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form")}setConfirmDelete(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}("#delete-card-modal");function b(e){y.open(),y.setConfirmDelete((()=>{S.deleteCard(e._id).then((()=>{y.close(),e.remove()})).catch((e=>{console.error("Error deleting card:",e)}))}))}function k(e){e.isLiked?S.dislikeCard(e._id).then((()=>{e.updateIsLiked()})).catch((e=>console.error("Error deleting card:",e))):S.likeCard(e._id).then((()=>{e.updateIsLiked(!0)})).catch((e=>console.error("Error deleting card:",e)))}y.setEventListeners();const L=new class extends v{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._modalPreviewImageElement=this._popupElement.querySelector(".modal__preview-image"),this._previewCaptionElement=this._popupElement.querySelector("#preview-caption")}open(e){this._modalPreviewImageElement.src=e.link,this._modalPreviewImageElement.alt=e.name,this._previewCaptionElement.textContent=e.name,super.open()}}({popupSelector:"#preview-modal"});L.setEventListeners();const C=new E({popupSelector:"#profile-add-modal",handleFormSubmit:function(e){const t={name:e.title,link:e.description};C.renderLoading(!0),S.createNewCard({name:t.name,link:t.link}).then((e=>{const t=F(e);f.addItem(t),C.close(),B.disableButton(),C.reset()})).catch((e=>{console.error(e)})).finally((()=>{C.renderLoading(!1)}))}});C.setEventListeners();const g=new class{constructor(e,t,r){this._name=document.querySelector(e),this._about=document.querySelector(t),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e,t){this._name.textContent=e,this._about.textContent=t}setAvatar(e){this._avatar.src=e}}(".profile__title",".profile__description",".profile__image"),q=new E({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){q.renderLoading(!0),S.updateProfileInfo(e.name,e.about).then((e=>{g.setUserInfo(e.name,e.about),w.disableButton(),q.close()})).catch((e=>{console.error(e)})).finally((()=>{q.renderLoading(!1)}))}}),I=new E({popupSelector:"#edit-avatar-modal",handleFormSubmit:function(e){let{link:t}=e;I.renderLoading(!0),S.updateAvatar(t).then((()=>{g.setAvatar(t),I.close()})).catch((e=>{console.error("Error updating avatar:",e)})).finally((()=>{I.renderLoading(!1)}))}});document.querySelector(".profile__image-container").addEventListener("click",(()=>I.open())),I.setEventListeners();const w=new m(e,c),B=new m(e,u);function U(e){L.open(e)}function F(e){return new _(e,"#card-template",U,b,k).getView()}new m(e,h).enableValidation(),w.enableValidation(),B.enableValidation(),q.setEventListeners(),i.addEventListener("click",(()=>{const e=g.getUserInfo();a.value=e.name,l.value=e.about,q.open()})),d.addEventListener("click",(()=>C.open(n)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,